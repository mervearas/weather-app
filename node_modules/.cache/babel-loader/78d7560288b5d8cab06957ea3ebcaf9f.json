{"ast":null,"code":"import _slicedToArray from\"/Users/mervearas/Desktop/hackyourfuture/repositories/React/week2/project/hackyourweather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React,{useState}from'react';import CityWeather from'./CityWeather';import SearchCity from'./SearchCity';var CityWeathers=function CityWeathers(){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),cityWeather=_useState2[0],setCityWeather=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isLoading=_useState4[0],setLoading=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),error=_useState6[0],setError=_useState6[1];function getCityWeather(city){setLoading(true);setError(false);fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\".concat(city,\"&appid=\").concat(process.env.REACT_APP_OPENWEATHERMAP_API_KEY)).then(function(res){return res.json();}).then(function(res){if(res.cod===\"404\"){setError(true);}else{setCityWeather(res);}}).catch(function(err){return setError(true);}).finally(function(){return setLoading(false);});}return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Weather\"}),/*#__PURE__*/_jsx(SearchCity,{handleClick:getCityWeather}),isLoading&&/*#__PURE__*/_jsx(\"p\",{children:\"Loading..\"}),error&&/*#__PURE__*/_jsx(\"p\",{children:\"Error! City weather information couldn't fetch. Try again.\"}),!error&&!isLoading&&cityWeather?/*#__PURE__*/_jsx(CityWeather,{cityName:cityWeather.name,countryName:cityWeather.sys.country,weatherMain:cityWeather.weather[0].main,weatherDescription:cityWeather.weather[0].description,minTemp:cityWeather.main.temp_min,maxTemp:cityWeather.main.temp_max,lat:cityWeather.coord.lat,lon:cityWeather.coord.lon}):/*#__PURE__*/_jsx(\"p\",{children:\"Please write the city name!\"})]});};export default CityWeathers;","map":{"version":3,"sources":["/Users/mervearas/Desktop/hackyourfuture/repositories/React/week2/project/hackyourweather/src/CityWeathers.js"],"names":["React","useState","CityWeather","SearchCity","CityWeathers","cityWeather","setCityWeather","isLoading","setLoading","error","setError","getCityWeather","city","fetch","process","env","REACT_APP_OPENWEATHERMAP_API_KEY","then","res","json","cod","catch","err","finally","name","sys","country","weather","main","description","temp_min","temp_max","coord","lat","lon"],"mappings":"uSAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,eACeH,QAAQ,CAAC,IAAD,CADvB,wCAChBI,WADgB,eACHC,cADG,8BAESL,QAAQ,CAAC,KAAD,CAFjB,yCAEhBM,SAFgB,eAELC,UAFK,8BAGGP,QAAQ,CAAC,KAAD,CAHX,yCAGhBQ,KAHgB,eAGTC,QAHS,eAKvB,QAASC,CAAAA,cAAT,CAAwBC,IAAxB,CAA8B,CAC1BJ,UAAU,CAAC,IAAD,CAAV,CACAE,QAAQ,CAAC,KAAD,CAAR,CACAG,KAAK,4DAAqDD,IAArD,mBAAmEE,OAAO,CAACC,GAAR,CAAYC,gCAA/E,EAAL,CACKC,IADL,CACU,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACC,IAAJ,EAAJ,EADb,EAEKF,IAFL,CAEU,SAAAC,GAAG,CAAI,CACT,GAAGA,GAAG,CAACE,GAAJ,GAAY,KAAf,CAAsB,CAClBV,QAAQ,CAAC,IAAD,CAAR,CACH,CAFD,IAEO,CACHJ,cAAc,CAACY,GAAD,CAAd,CACH,CACJ,CARL,EASKG,KATL,CASW,SAAAC,GAAG,QAAIZ,CAAAA,QAAQ,CAAC,IAAD,CAAZ,EATd,EAUKa,OAVL,CAUa,iBAAMf,CAAAA,UAAU,CAAC,KAAD,CAAhB,EAVb,EAWH,CAED,mBACI,aAAK,SAAS,CAAC,WAAf,wBACI,+BADJ,cAEI,KAAC,UAAD,EAAY,WAAW,CAAEG,cAAzB,EAFJ,CAGKJ,SAAS,eACN,gCAJR,CAMKE,KAAK,eACF,iFAPR,CASK,CAACA,KAAD,EAAU,CAACF,SAAX,EAAwBF,WAAxB,cACG,KAAC,WAAD,EACI,QAAQ,CAAEA,WAAW,CAACmB,IAD1B,CAEI,WAAW,CAAEnB,WAAW,CAACoB,GAAZ,CAAgBC,OAFjC,CAGI,WAAW,CAAErB,WAAW,CAACsB,OAAZ,CAAoB,CAApB,EAAuBC,IAHxC,CAII,kBAAkB,CAAEvB,WAAW,CAACsB,OAAZ,CAAoB,CAApB,EAAuBE,WAJ/C,CAKI,OAAO,CAAExB,WAAW,CAACuB,IAAZ,CAAiBE,QAL9B,CAMI,OAAO,CAAEzB,WAAW,CAACuB,IAAZ,CAAiBG,QAN9B,CAOI,GAAG,CAAE1B,WAAW,CAAC2B,KAAZ,CAAkBC,GAP3B,CAQI,GAAG,CAAE5B,WAAW,CAAC2B,KAAZ,CAAkBE,GAR3B,EADH,cAWO,kDApBZ,GADJ,CAyBH,CA9CD,CAgDA,cAAe9B,CAAAA,YAAf","sourcesContent":["import React, { useState } from 'react';\nimport CityWeather from './CityWeather';\nimport SearchCity from './SearchCity';\n\nconst CityWeathers = () => {\n    const [cityWeather, setCityWeather] = useState(null);\n    const [isLoading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n\n    function getCityWeather(city) {\n        setLoading(true);\n        setError(false);\n        fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${process.env.REACT_APP_OPENWEATHERMAP_API_KEY}`)\n            .then(res => res.json())\n            .then(res => {\n                if(res.cod === \"404\") {\n                    setError(true);\n                } else {\n                    setCityWeather(res)\n                }\n            })\n            .catch(err => setError(true))\n            .finally(() => setLoading(false))\n    }\n\n    return (\n        <div className=\"container\">\n            <h2>Weather</h2>\n            <SearchCity handleClick={getCityWeather} />\n            {isLoading && (\n                <p>Loading..</p>\n            )}\n            {error && (\n                <p>Error! City weather information couldn't fetch. Try again.</p>\n            )}\n            {!error && !isLoading && cityWeather ? (\n                <CityWeather\n                    cityName={cityWeather.name}\n                    countryName={cityWeather.sys.country}\n                    weatherMain={cityWeather.weather[0].main}\n                    weatherDescription={cityWeather.weather[0].description}\n                    minTemp={cityWeather.main.temp_min}\n                    maxTemp={cityWeather.main.temp_max}\n                    lat={cityWeather.coord.lat}\n                    lon={cityWeather.coord.lon} />\n            ) : (\n                    <p>Please write the city name!</p>\n                )}\n        </div>\n    );\n}\n\nexport default CityWeathers;"]},"metadata":{},"sourceType":"module"}