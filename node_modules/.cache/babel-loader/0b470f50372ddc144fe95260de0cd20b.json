{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mervearas/Desktop/hackyourfuture/repositories/React/week2/project/hackyourweather/src/CityWeathers.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport CityWeather from './CityWeather';\nimport SearchCity from './SearchCity';\n\nconst CityWeathers = () => {\n  _s();\n\n  const [cityWeather, setCityWeather] = useState(null);\n  const [isLoading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  function getCityWeather(city) {\n    setLoading(true);\n    setError(false);\n    fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${process.env.REACT_APP_OPENWEATHERMAP_API_KEY}`).then(res => res.json()).then(res => {\n      if (res.cod === \"404\") {\n        setError(true);\n      } else {\n        setCityWeather(res);\n      }\n    }).catch(err => setError(true)).finally(() => setLoading(false));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Weather\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SearchCity, {\n      handleClick: getCityWeather\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading..\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Error! City weather information couldn't fetch. Try again.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this), !error && !isLoading && cityWeather ? /*#__PURE__*/_jsxDEV(CityWeather, {\n      cityName: cityWeather.name,\n      countryName: cityWeather.sys.country,\n      weatherMain: cityWeather.weather[0].main,\n      weatherDescription: cityWeather.weather[0].description,\n      minTemp: cityWeather.main.temp_min,\n      maxTemp: cityWeather.main.temp_max,\n      lat: cityWeather.coord.lat,\n      lon: cityWeather.coord.lon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please write the city name!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CityWeathers, \"L2dvApOAUYQNqP8yuhoKtH6ubxs=\");\n\n_c = CityWeathers;\nexport default CityWeathers;\n\nvar _c;\n\n$RefreshReg$(_c, \"CityWeathers\");","map":{"version":3,"sources":["/Users/mervearas/Desktop/hackyourfuture/repositories/React/week2/project/hackyourweather/src/CityWeathers.js"],"names":["React","useState","CityWeather","SearchCity","CityWeathers","cityWeather","setCityWeather","isLoading","setLoading","error","setError","getCityWeather","city","fetch","process","env","REACT_APP_OPENWEATHERMAP_API_KEY","then","res","json","cod","catch","err","finally","name","sys","country","weather","main","description","temp_min","temp_max","coord","lat","lon"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAACM,SAAD,EAAYC,UAAZ,IAA0BP,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,KAAD,CAAlC;;AAEA,WAASU,cAAT,CAAwBC,IAAxB,EAA8B;AAC1BJ,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACAG,IAAAA,KAAK,CAAE,oDAAmDD,IAAK,UAASE,OAAO,CAACC,GAAR,CAAYC,gCAAiC,EAAhH,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUC,GAAG,IAAI;AACT,UAAGA,GAAG,CAACE,GAAJ,KAAY,KAAf,EAAsB;AAClBV,QAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,OAFD,MAEO;AACHJ,QAAAA,cAAc,CAACY,GAAD,CAAd;AACH;AACJ,KARL,EASKG,KATL,CASWC,GAAG,IAAIZ,QAAQ,CAAC,IAAD,CAT1B,EAUKa,OAVL,CAUa,MAAMf,UAAU,CAAC,KAAD,CAV7B;AAWH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,UAAD;AAAY,MAAA,WAAW,EAAEG;AAAzB;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGKJ,SAAS,iBACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJR,EAMKE,KAAK,iBACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPR,EASK,CAACA,KAAD,IAAU,CAACF,SAAX,IAAwBF,WAAxB,gBACG,QAAC,WAAD;AACI,MAAA,QAAQ,EAAEA,WAAW,CAACmB,IAD1B;AAEI,MAAA,WAAW,EAAEnB,WAAW,CAACoB,GAAZ,CAAgBC,OAFjC;AAGI,MAAA,WAAW,EAAErB,WAAW,CAACsB,OAAZ,CAAoB,CAApB,EAAuBC,IAHxC;AAII,MAAA,kBAAkB,EAAEvB,WAAW,CAACsB,OAAZ,CAAoB,CAApB,EAAuBE,WAJ/C;AAKI,MAAA,OAAO,EAAExB,WAAW,CAACuB,IAAZ,CAAiBE,QAL9B;AAMI,MAAA,OAAO,EAAEzB,WAAW,CAACuB,IAAZ,CAAiBG,QAN9B;AAOI,MAAA,GAAG,EAAE1B,WAAW,CAAC2B,KAAZ,CAAkBC,GAP3B;AAQI,MAAA,GAAG,EAAE5B,WAAW,CAAC2B,KAAZ,CAAkBE;AAR3B;AAAA;AAAA;AAAA;AAAA,YADH,gBAWO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YApBZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH,CA9CD;;GAAM9B,Y;;KAAAA,Y;AAgDN,eAAeA,YAAf","sourcesContent":["import React, { useState } from 'react';\nimport CityWeather from './CityWeather';\nimport SearchCity from './SearchCity';\n\nconst CityWeathers = () => {\n    const [cityWeather, setCityWeather] = useState(null);\n    const [isLoading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n\n    function getCityWeather(city) {\n        setLoading(true);\n        setError(false);\n        fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${process.env.REACT_APP_OPENWEATHERMAP_API_KEY}`)\n            .then(res => res.json())\n            .then(res => {\n                if(res.cod === \"404\") {\n                    setError(true);\n                } else {\n                    setCityWeather(res)\n                }\n            })\n            .catch(err => setError(true))\n            .finally(() => setLoading(false))\n    }\n\n    return (\n        <div className=\"container\">\n            <h2>Weather</h2>\n            <SearchCity handleClick={getCityWeather} />\n            {isLoading && (\n                <p>Loading..</p>\n            )}\n            {error && (\n                <p>Error! City weather information couldn't fetch. Try again.</p>\n            )}\n            {!error && !isLoading && cityWeather ? (\n                <CityWeather\n                    cityName={cityWeather.name}\n                    countryName={cityWeather.sys.country}\n                    weatherMain={cityWeather.weather[0].main}\n                    weatherDescription={cityWeather.weather[0].description}\n                    minTemp={cityWeather.main.temp_min}\n                    maxTemp={cityWeather.main.temp_max}\n                    lat={cityWeather.coord.lat}\n                    lon={cityWeather.coord.lon} />\n            ) : (\n                    <p>Please write the city name!</p>\n                )}\n        </div>\n    );\n}\n\nexport default CityWeathers;"]},"metadata":{},"sourceType":"module"}